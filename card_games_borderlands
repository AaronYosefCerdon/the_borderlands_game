# Print intro message for the trivia game.
introduction = "Welcome to the Borderlands, the place between life and death. Clear all 16 games to find the truth of this place."
print(introduction)

# Print the instructions for the game.
mechanics = "Start by choosing a game from the following options: Ace, Jack, Queen and King. Afterwards, choose a card suit: Clubs, Spades, Diamonds or Hearts. For example, Ace of Diamonds."
print(mechanics)

message = "The games can be cleared in any order. The truth will be revealed once all games have been cleared. Failure in any game and failure to complete all games will result in death. Best of luck. "
print(message)

# Add a game clear to track no. of games finished.
game_clear = 0

# Use a loop to play the games in any order.
while game_clear < 16:
    # Use if for choosing a game.
    game_choice = input("Choose the game you want to play: ")

    # Create the Ace of Diamonds game.
    if game_choice == "Ace of Diamonds":
        print("Welcome to the Ace of Diamonds! The game is called Star Magic.")
        print("Answer these 10 questions about constellations to clear the game. If a mistake is made, game over. Good luck!")

        # Define a list of questions and answers
        star_questions = [
            {"question": "What constellation is depicted by the lion?", "answer": "Leo"},
            {"question": "Which animal is represented by Aries?", "answer": "Ram"},
            {"question": "Which constellation is said to be the bird that carried Zeus' thunderbolts?", "answer": "Aquila"},
            {"question": "Which constellation is depicted as the sea monster?", "answer": "Cetus"},
            {"question": "There are _____ well-known constellations, each depicting different animals, beings or objects. How many official constellations are there?", "answer": "88"},
            {"question": "What constellation is known as the smallest?", "answer": "Crux"},
            {"question": "What constellation is the oldest known?", "answer": "Taurus"},
            {"question": "Orion is considered as the ________ constellation. What is he considered as?", "answer": "Hunter"},
            {"question": "Which constellation is known as the biggest?", "answer": "Hydra"},
            {"question": "Which constellation is depicted as the Twins?", "answer": "Gemini"}
        ]

        # Added point system.
        correct_stars = 0

        # Iterate over the questions
        for i, question in enumerate(star_questions):
            print(f"\nQuestion {i+1}: {question['question']}")

            # Get the answer
            user_answer = input("Enter your answer here: ")

            # Check if the user's answer is correct
            if user_answer.lower() == question["answer"].lower():
                print("Correct! Proceed to the next question.")
                correct_stars += 1
                print("Questions finished:", correct_stars)
            else:
                print(f"Incorrect. The correct answer is {question['answer']}.")
                print("Game over!")
                break

        if correct_stars == 10:
            print("Game Clear. Congratulations.")
            game_clear += 1

        play_again = input("Would you like to play another game? (yes/no): ")
        if play_again.lower() != "yes":
            break

    elif game_choice == "Ace of Hearts":
        print("Welcome to the Ace of Hearts. The game is called Mind Heart.")
        print("Complete these 7 quotes from the TV show Alice in Borderland by filling in the blanks. The game will be cleared once all quotes are finished. Any mistake means game over. Good luck!")

        # Define a list of questions and answers
        quote_questions = [
            {"question": "Ryohei Arisu: 'You guys are all I have. If someone has to _________ this game, it's not me'. This heartbreaking statement by Ryohei was uttered as he pleaded for his friends to reveal their locations in the deadly 7 of Hearts. Fill in the blank with the correct word. Here's a clue: it is an action word that depicts a certain condition when disaster strikes.", "answer": "Survive"},
            {"question": "Shuntaro Chishiya: To gain something, you need to ______ something. This brutal statement is caused by Chishiya's jaded look in life. What word describes the statement so it fills the criteria for you to gain something? Hint: its an action word that every person has experienced in life.", "answer": "lose"}, 
           {"question": "Hikari Kuina: You just keep turning your back on your past, but I will ______ my past once more in order to survive. This determined statement fueled her fire to clear the games, what did she do to her past instead of turning her back on it? Hint: What you see in the mirror. ", "answer": "Face"},
        {"question": "Niragi Suguru: Left to our own devices, _______ will rape, steal and kill each other. That's just who we really are. Niragi's beliefs came from his troubled life, who does he think will harm each other? No hints for this one.", "answer": "Humans"},
        {"question": "Usagi Yuzuha: It amazes me that I'm willing to do ________ just so I can survive. If we weren't willing, we might as well die. Usagi's words highlights her will to survive the deadly games. What is she willing to do to survive? Hint: It is something we can all do.", "answer": "Anything"},
        {"question": "Ginji Kyuma: Your life is yours. Don't _______ someone else's path. This statement inspires everyone to take their own fate into their hands. What is he saying should we not do? ", "answer": "Follow"},
        {"question": "Mira Kano: Life is just a _______ we play together. You should try to enjoy it. Mira's last words is a statement that encompassed the themes of the Borderlands. What word is she comparing life to? Hint: It is something that can be done alone but is more fun together.", "answer": "Game"},
    ]

    # Add a quote counter.
    correct_quotes = 0

    # Iterate over the questions
    for i, question in enumerate(quote_questions):
        print(f"\nQuestion {i+1}: {question['question']}")

        # Fill in the answers.
        quote_answer = input("Enter your answer here: ")

        # Check if the user's answer is correct
        if quote_answer.lower() == question["answer"].lower():
            print("Correct! Proceed to the next question.")        
            correct_quotes += 1
            print("Current quotes finished: ", correct_quotes)
        else:
            print(f"Incorrect. The correct answer is {question['answer']}.")
            print("Game over!")
            break

    if correct_quotes == 7:
        game_clear +=1

    play_again = input("Would you like to play another game? (yes/no): ")
    if play_again.lower() != "yes":
        break
        
# Create the Ace of Spades game.
# Create the Ace of Clubs game.
# Create the Jack of Diamonds game.
# Create the Jack of Hearts game.
# Create the Jack of Spades game.
# Create the Jack of Clubs game.
# Create the Queen of Diamonds game.
# Create the Queen of Hearts game.
# Create the Queen of Spades game.
# Create the Queen of Clubs game.
# Create the King of Diamonds game.
# Create the King of Hearts game.
# Create the King of Spades game.
# Create the King of Clubs game.        
        
# Print a final message when all games are cleared.
if game_clear == 16:
	print("Congratulations! You have cleared all 16 games and found the truth.")
	print("Do you want to stay in the Borderlands or return to the real world? Whatever your choice is, it doesn't really matter.")
	print("Like Mira said, life is just a game we play together, you should try to enjoy it. Whatever you choose, its of your own volition. Do it for yourself, not for others.")
	print("That's all for now. Maybe we'll see each other again. ")
# Print a fail message for not completing all games.
else:
	print("You have failed. Death awaits.")


